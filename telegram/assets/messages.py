from typing import List
from models import Card, Interest, Sex, User


def _build_interests(interests: int) -> List[str]:
    result = []
    bin_interests = (bin(interests)[2:])[::-1]
    for i in range(len(bin_interests)):
        if bin_interests[i] == '1':
            result.append(Interest.from_value(i).russian_name)
    return result


START = (
    "–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∞ –∏–ª–∏ "
    "–≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É."
)

REQUEST_NAME = (
    "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?"
)

REQUEST_AGE = (
    "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?"
)

REQUEST_CITY = (
    "–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?"
)

REQUEST_SEX = (
    "–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?"
)

REQUEST_MEDIA = (
    "–ü—Ä–∏—à–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ"
)

CHOOSE_INTERESTS = (
    "–°—É–ø–µ—Ä! –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ –º–Ω–æ–≥–æ."
    "–í—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã, —á—Ç–æ–±—ã –±—ã–ª–æ –ª–µ–≥—á–µ "
    "–Ω–∞–π—Ç–∏ –ø–∞—Ä—É."
)

    
def card_info(card: Card) -> str:
    first_line = "{name}, {city}, {age}".format(**card.__dict__)
    description_line = "{description}".format(**card.__dict__)

    interests = _build_interests(card.interests)
    interests_line = ""
    for i in range(len(interests)):
        interests_line += f"{interests[i]} "
        if (i+1) % 2 == 0:
            interests_line += "\n"

    if card.description:
        return (
            f"{first_line}\n"
            "\n"
            f"{description_line}\n"
            "\n"
            f"<b>{interests_line}</b>"
        )
    else:
        return (
            f"{first_line}\n"
            "\n"
            f"<b>{interests_line}</b>"
        )



REQUEST_DESCRIPTION = (
    "–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ: –ù–∞–ø–∏—à–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ "
    "(–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤) –∏–ª–∏ –æ—Å—Ç–∞–≤—å —ç—Ç–æ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º"
)

CARD_DONE = (
    "–û—Ç–ª–∏—á–Ω–æ, —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞, "
    "–µ—Å–ª–∏ –≤—Å–µ –æ–∫, –ø–µ—Ä–µ–π–¥–µ–º –∫ –ø–æ–∏—Å–∫—É –ø–∞—Ä—ã."
)

REQUEST_WHO_SEEK = (
    "–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å?"
)

REQUEST_AGE_SEEK = (
    "–ö–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ç—ã –∏—â–µ—à—å?\n"
    "–í–≤–µ–¥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 17-21."
)

SETTINGS_DONE = (
    "–°—É–ø–µ—Ä. –ú–æ–∂–µ—à—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∞–Ω–∫–µ—Ç–∞–º."
)


# for tests
if __name__ == '__main__':
    card = Card(
        id=1,
        name="–í–∏—Ç—è",
        age=20,
        city="–û–º—Å–∫",
        interests="11111000",
        description="–Ø –∞–¥–º–∏–Ω —Ç–≥ –∫–∞–Ω–∞–ª–∞ –±–ª–∞ –±–ª–∞",
        media=[]
    )
    print(card_info(card))


INVALID_NAME = (
    "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª–∏–Ω–æ–π –Ω–µ –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!"
)

INVALID_AGE = (
    "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —á–∏—Å–ª–æ - –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç."
)

TOO_YOUNG = (
    "–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç–∞—Ä—à–µ 16 —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º."
)

INVALID_CITY = (
    "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º, –Ω–µ –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!"
)

INVALID_SEX = (
    "–í–≤–µ–¥–∏—Ç–µ –ª–∏–±–æ \"–ü–∞—Ä–µ–Ω—å\", –ª–∏–±–æ \"–î–µ–≤—É—à–∫–∞\"."
)

INVALID_SEEK_SEX = (
    "–í–≤–µ–¥–∏—Ç–µ –ª–∏–±–æ \"–î–µ–≤—É—à–µ–∫\", –ª–∏–±–æ \"–ü–∞—Ä–Ω–µ–π\"."
)

INVALID_SEEK_AGE_FORMAT = (
    "–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ <–æ—Ç>-<–¥–æ>\n"
    "–ù–∞–ø—Ä–∏–º–µ—Ä: \"17-21\" –∏–ª–∏ \"18-18\""
)

INVALID_SEEK_AGE = (
    "–í–æ–∑—Ä–∞—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 16"
)

INVALID_MEDIA = (
    "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –§–û–¢–û –∏–ª–∏ –í–ò–î–ï–û"
)

TOO_MANY_MEDIA = (
    "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å –Ω–µ –±–æ–ª–µ–µ 3—Ö –≤–ª–æ–∂–µ–Ω–∏–π"
)

CLICK_DONE_INTERESTS = (
    "–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≤–∞–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã"
)

IDLE_MENU = (
    "–ü–æ–¥–æ–∂–¥–µ–º –ø–æ–∫–∞ —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É –∫—Ç–æ-—Ç–æ —É–≤–∏–¥–∏—Ç"
)

YOU_BEEN_LIKED = (
    "–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞!"
)

def response_like(user: User, card: Card) -> str:
    match (card.sex):
        case Sex.MALE: answered = "–æ—Ç–≤–µ—Ç–∏–ª"
        case Sex.FEMALE: answered = "–æ—Ç–≤–µ—Ç–∏–ª–∞"
        case _: answered = "–æ—Ç–≤–µ—Ç–∏–ª/–∞"
    user_link = f'<a href="tg://user?id={user.tg_id}">{user.first_name}</a>'
    user_username = f'(@{user.username})' if user.username else ""
    return (
        f"{user_link} {user_username} {answered} —Ç–µ–±–µ!\n"
        "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è\n"
        "*–µ—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –µ—ë –ø–æ–ª—É—á–∏—Ç—å :("
    )

def received_message(message: str) -> str:
    return (
        "–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞!\n"
        f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {message}"
    )

def link_to_user(user: User) -> str:
    user_username = f'(@{user.username})' if user.username else ""
    return (
        "\n\n–°—É–ø–µ—Ä! –í–æ—Ç –∫–æ–Ω—Ç–∞–∫—Ç: "
        f'<a href="tg://user?id={user.tg_id}">{user.first_name}</a> {user_username}'
    )

def message_card(card: Card) -> str:
    return (
        f"–í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {card.name}"
    )

MESSAGE_SENT = (
    "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"
)

YOUR_CARD = (
    "–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞"
)

CHANGE_MEDIA = (
    "–ü—Ä–∏—à–ª–∏—Ç–µ –¥–æ 3 –§–û–¢–û –∏–ª–∏ –í–ò–î–ï–û"
)
